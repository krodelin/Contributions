| package |
package := Package name: 'US RichTextEdit Extensions'.
package paxVersion: 1;
	basicComment: 'Example:

presenter := RichTextPresenter 
			showOn: ''This is my E-Mail Address: mailto:Udo.Schneider@homeaddress.de . 
Just drop me a mail or visit me here: http://readthesourceluke.blogspot.com/'' 
					asRichText.
(presenter view)
	autoUrlDetect: true;
	link: true;
	enableMailtoLinks.
presenter 
	when: #linkClicked:
	send: #value:
	to: [:link | MessageBox notify: link caption: ''Link clicked'']a RichTextPresenter
	'.

package basicPackageVersion: '0.010'.


package methodNames
	add: #Character -> #isValidInEmail;
	add: #CHARFORMAT2W -> #isLink;
	add: #CHARFORMAT2W -> #isLink:;
	add: #RichTextEdit -> #autoUrlDetect:;
	add: #RichTextEdit -> #beLink;
	add: #RichTextEdit -> #enableMailtoLinks;
	add: #RichTextEdit -> #getEventMask;
	add: #RichTextEdit -> #link;
	add: #RichTextEdit -> #link:;
	add: #RichTextEdit -> #setEventMask:;
	add: #TextPresenter -> #onLinkClicked:;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\..\..\Core\Object Arts\Dolphin\Base\Dolphin';
	add: '..\..\..\Core\Object Arts\Dolphin\MVP\Presenters\Text\Dolphin Rich Text Presenter';
	add: '..\..\..\Core\Object Arts\Dolphin\MVP\Presenters\Text\Dolphin Text Presenter';
	yourself).

package!

"Class Definitions"!


"Global Aliases"!


"Loose Methods"!

!Character methodsFor!

isValidInEmail
	^self isAlphaNumeric 
		or: [##(Array 
				with: $@
				with: $.
				with: $-
				with: $_) includes: self]! !
!Character categoriesFor: #isValidInEmail!*-not in class package!public!testing! !

!CHARFORMAT2W methodsFor!

isLink
	"Answer the character link effect."

	^(self maskAny: CFM_LINK) and: [self effectsAny: CFM_LINK]!

isLink: aBoolean
	"Set the link character effect."

	self
		setEffect: CFM_LINK
		mask: CFM_LINK
		set: aBoolean! !
!CHARFORMAT2W categoriesFor: #isLink!accessing!public! !
!CHARFORMAT2W categoriesFor: #isLink:!accessing!public! !

!RichTextEdit methodsFor!

autoUrlDetect: aBoolean 
self sendMessage: EM_AUTOURLDETECT wParam: aBoolean asParameter!

beLink
	self selectionCharFormat: (CHARFORMAT2W new
				isLink: true;
				yourself)!

enableMailtoLinks
	"Fixes all Mail addresses to be clickable Links"

	| start stop rtf address insert combinations |
	rtf := self value rtf.
	combinations := OrderedCollection new.
	start := 1.
	"Find all tokens starting with matching 'mailto:*' and hide the 'mailto:' part. This allows us to get the complete mailto: link when the link is clicked but not have it displayed"
	[(start := rtf indexOfSubCollection: 'mailto:' startingAt: start) > 0] whileTrue: 
			[stop := start + 'mailto:' size.
			[(rtf at: (stop := stop + 1)) isValidInEmail] whileTrue.
			address := rtf copyFrom: start + 7 to: stop - 1.
			combinations add: 'mailto:' , address.
			insert := '{\v mailto:\v0' , address , '}'.
			rtf := rtf 
						copyReplaceFrom: start
						to: stop - 1
						with: insert.
			start := start + insert size].
	self value: (RichText fromRtf: rtf).
	"Enumerate all mailto: links found above and make them linkable"
	combinations inject: 1
		into: 
			[:linkStart :each | 
			| offset |
			offset := self plainText indexOfSubCollection: each startingAt: linkStart.
			self
				selectionRange: (offset to: offset + each size - 1);
				beLink.
			offset + each size].
	self selectionRange: (0 to: 0)!

getEventMask

	^self 
		sendMessage: EM_GETEVENTMASK
		wParam: nil
		lpParam: nil
!

link
	^self getEventMask allMask: ENM_LINK!

link: aBoolean 
	self setEventMask: (self getEventMask mask: ENM_LINK set: aBoolean)!

setEventMask: maskInteger 
	

	^(self 
		sendMessage: EM_SETEVENTMASK
		wParam: nil
		lpParam: maskInteger) ~= 0! !
!RichTextEdit categoriesFor: #autoUrlDetect:!*-not in class package!accessing!public! !
!RichTextEdit categoriesFor: #beLink!*-not in class package!public! !
!RichTextEdit categoriesFor: #enableMailtoLinks!*-not in class package!public! !
!RichTextEdit categoriesFor: #getEventMask!*-in class package!helpers!private! !
!RichTextEdit categoriesFor: #link!*-not in class package!accessing!public! !
!RichTextEdit categoriesFor: #link:!*-not in class package!accessing!public! !
!RichTextEdit categoriesFor: #setEventMask:!*-not in class package!helpers!private! !

!TextPresenter methodsFor!

onLinkClicked: aLinkEvent 
	
	^self view onLinkClicked: aLinkEvent 
	
	! !
!TextPresenter categoriesFor: #onLinkClicked:!*-not in class package!public! !

"End of package definition"!

