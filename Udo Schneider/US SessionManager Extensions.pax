| package |
package := Package name: 'US SessionManager Extensions'.
package paxVersion: 1;
	basicComment: ''.

package basicPackageVersion: '0.008'.


package methodNames
	add: #GUISessionManager -> #defaultResLibPath;
	add: #Object -> #sessionManager;
	add: #SessionManager -> #isTaskManagerDisabled;
	add: #SessionManager -> #isTaskManagerDisabled:;
	add: 'GUISessionManager class' -> #logError:message:;
	add: 'GUISessionManager class' -> #logErrorMessage:;
	add: 'Object class' -> #sessionManager;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\..\Core\Object Arts\Dolphin\Base\Dolphin'
	'..\..\Core\Object Arts\Dolphin\Base\Dolphin Message Box'
	'..\..\Core\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base'
	'..\..\Core\Object Arts\Dolphin\Registry\Dolphin Registry Access').

package!

"Class Definitions"!


"Global Aliases"!


"Loose Methods"!

!GUISessionManager methodsFor!

defaultResLibPath
	"Answer the path of the development resource library. 'self argv first' may not 
	include the full path to the executable if started from the command line"


	^self imageFileName! !
!GUISessionManager categoriesFor: #defaultResLibPath!constants!must not strip!public! !

!GUISessionManager class methodsFor!

logError: anException message: aString 
	MessageBox errorMsg: aString caption: self productName.
	SessionManager current isRuntime 
		ifTrue: 
			[SessionManager current logError: anException.
			VMLibrary default crashDump: aString.
			SessionManager current quit]
		ifFalse: [anException signal]!

logErrorMessage: aString 
	MessageBox errorMsg: aString caption: self productName.
	SessionManager current isRuntime 
		ifTrue: 
			[VMLibrary default crashDump: aString.
			SessionManager current quit]
		ifFalse: [Error signal: aString]! !
!GUISessionManager class categoriesFor: #logError:message:!public! !
!GUISessionManager class categoriesFor: #logErrorMessage:!public! !

!Object methodsFor!

sessionManager
	^self class sessionManager! !
!Object categoriesFor: #sessionManager!public! !

!Object class methodsFor!

sessionManager
	^SessionManager current isRuntime 
		ifTrue: [SessionManager current class]
		ifFalse: [[self owningPackage imageStripper runtimeSessionManagerClass] on: Error do: [:ex | nil]]! !
!Object class categoriesFor: #sessionManager!public! !

!SessionManager methodsFor!

isTaskManagerDisabled
	| key |
	key := RegKey userRoot at: 'Software\Microsoft\Windows\CurrentVersion\Policies\System'.
	^key subValues includesKey: 'DisableTaskMgr'!

isTaskManagerDisabled: aBoolean
	| key |
	key := RegKey userRoot at: 'Software\Microsoft\Windows\CurrentVersion\Policies\System'.
	aBoolean ifTrue: [key subValues at: 'DisableTaskMgr' put: 1.] ifFalse: [key subValues removeKey: 'DisableTaskMgr' ifAbsent: [].]
	

! !
!SessionManager categoriesFor: #isTaskManagerDisabled!public! !
!SessionManager categoriesFor: #isTaskManagerDisabled:!public! !

"End of package definition"!

